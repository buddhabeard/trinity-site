---
import BlogHero from "../../components/BlogHero.astro";
import Container from "../../components/Container.astro";
import Layout from "../../layouts/Layout.astro";
// import PageHero from "../../components/PageHero.astro";
import fetchApi from "../../lib/strapi";
import type Posts from "../../interfaces/Posts";
import type { BlogIndexPage } from "../../interfaces/Pages";
import type { Post } from "../../interfaces/Posts";
import { blogIndexPageQuery, postsQuery } from "../../lib/queries";
import type { HeroComponent } from "../../interfaces/Components";

export async function getStaticPaths() {
  const posts = await fetchApi<Posts>({
    endpoint: "posts",
    query: postsQuery,
  });

  return posts.data.map((post: Post) => ({
    params: {
      slug: post.attributes.slug,
    },
    props: {
      ...post.attributes,
      likes: post.attributes.likes || 0,
      image: post.attributes.image?.data?.attributes?.url || "",
      event: post.attributes.event?.data?.attributes?.title || "",
      categories:
        post.attributes.categories?.data
          ?.map((c) => c?.attributes?.name)
          .join(" ") || "",
    },
  }));
}

const blog = await fetchApi<BlogIndexPage>({
  endpoint: "blog",
  query: blogIndexPageQuery,
});

const posts = await fetchApi<Posts>({
  endpoint: "posts",
  query: postsQuery,
});
---

<Layout title="Blog">
  <main>
    <!-- @ts-ignore -->
    <BlogHero {...blog.data.attributes.hero} />

    <Container isSection classes="pt-20">
      {posts.data.map((post) => post.attributes.slug)}
    </Container>
  </main>
</Layout>
